shell.prefix("set -eo pipefail; echo BEGIN at $(date); ")
shell.suffix("; exitstat=$?; echo END at $(date); echo exit status was $exitstat; exit $exitstat")

configfile: "rnaseq.yaml"

SAMPLESNAME = config['SAMPLENAME']
Rep = config['Rep']
SAMPLES = list(str(x) + '-' + str(y) for x in SAMPLESNAME for y in Rep)

rule all:
    input: 
        expand("bam/{sample}.sort.bam", sample = SAMPLES),
        expand("featurecounts/{samplename}.out", samplename = SAMPLESNAME),
        expand("featurecounts/{samplename}.rawcount", samplename = SAMPLESNAME)
    
rule fastp_trim:
    input:
        raw1 = "raw_seq/{sample}_1.fq.gz",
        raw2 = "raw_seq/{sample}_2.fq.gz"
    output:
        paired1 = "paired/{sample}_1.paired.fq.gz",
        paired2 = "paired/{sample}_2.paired.fq.gz"
    threads:
        config["fastp_trim"]["cpu"]
    log:
        "log/paired/{sample}.log"
    shell:
        "fastp -i {input.raw1} -o {output.paired1} -I {input.raw2} -O {output.paired2} -c -w {threads} > {log} 2>&1" 

rule hisat2_map:
    input:
        paired1 = "paired/{sample}_1.paired.fq.gz",
        paired2 = "paired/{sample}_2.paired.fq.gz"
    output:
        sam = "bam/{sample}.sam"
    params:
        index = "ref/hisat2/genome_tran"
    threads:
        config["hisat2_map"]["cpu"]
    log:
        "log/hisat2/{sample}.log"
    shell:
        "hisat2 -p {threads} -x {params.index} -1 {input.paired1} -2 {input.paired2} -S {output.sam} > {log} 2>&1"

rule sam2bam:
    input:
        sam = "bam/{sample}.sam"
    output:
        bam = "bam/{sample}.sort.bam"
    threads:
        config["sam2bam"]["cpu"]
    shell:
        "samtools view -@ {threads} -bs -1 {input.sam}|samtools sort -@ {threads} -o {output.bam}"

rule counts:
    input:
        gtf = "ref/genome.gtf",
        bam = expand("bam/{{samplename}}-{rep}.sort.bam", rep = Rep)
    output:
        "featurecounts/{samplename}.out"
    threads:
        config["counts"]["cpu"]
    log:
        "log/featureCounts/{samplename}.log"
    shell:
        "featureCounts -T {threads} -p -t exon -g gene_id -a {input.gtf} -o {output} {input.bam} > {log} 2>&1"

rule rawcounts:
    input:
        out = "featurecounts/{samplename}.out"
    output:
        rawcount = "featurecounts/{samplename}.rawcount"
    shell:
        "cut -f 1,7,8,9 {input.out} |grep -v '#' |sed 's/bam\///g'|sed 's/.sort.bam//g' > {output.rawcount} "